{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","includes","type","value","onChange","target","getGifs","category","a","process","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","loadingImages","GifExpertApp","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2MAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAerC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAC,OAAKA,EAAEC,SAASR,GAAkCO,EAA9C,CAA2BP,GAA3B,mBAA0CO,OAC9DN,EAAc,MAKlB,SACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJC,mCACTC,EAFa,iDAEmCC,UAAUJ,GAF7C,sCACJE,oCADI,SAGAG,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACZf,mBAAS,CAAEuB,KAAM,GAAIa,SAAS,IADlB,mBAC/BC,EAD+B,KACxBC,EADwB,KAStC,OANAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAAAhB,GACnBc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SAErC,CAACrB,IAEGsB,EDR0CI,CAAa1B,GAAhDc,EADuB,EAC7BN,KAAuBmB,EADM,EACfN,QAEtB,OACI,qCACI,6BAAKrB,IACJ2B,GAAiB,aAClB,qBAAKV,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEKlBgB,EAfM,WAAO,IAAD,EACa3C,mBAAS,CAAC,cADvB,mBAChB4C,EADgB,KACJ7C,EADI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACC6C,EAAWnB,KAAI,SAAAV,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,UCDf8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ab06be86.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories( c => !c.includes(inputValue) ? [inputValue, ...c]: c);\n            setInputValue('');\n        }\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n\n\n\n\n\n\n\n","export const getGifs = async (category) => {\n    const token =  process.env.REACT_APP_GIPHY_TOKEN;\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&rating=R&limit=10&api_key=${token}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return ({\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        })\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading: loadingImages } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loadingImages && \"Loading...\"}\n            <div className=\"card-grid\">\n                {images.map((img) => (\n                    <GifGridItem\n                        key={img.id}\n                        {...img}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({ data: [], loading: true });\n\n    useEffect(() => {\n        getGifs(category).then(gifs => {\n            setState({ data: gifs, loading: false })\n        });\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n/* DTLP9GPpgJZYZkZJhGoTV5a6rmYFSkTQ */\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Piece']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            {categories.map(category => (\n                <GifGrid key={category} category={category} />\n            ))}\n        </>\n    )\n}\n\nexport default GifExpertApp\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}